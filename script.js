function summary(a) {

    return function(b) {

        return a+b;

    }

};

const sum1 = summary(1);
console.log(sum1(2));
/* #2 
Вся проблема заключается в переменной var. Эта переменная объявляется глобально 
(в отличии от let, const которые объявляются локально) и создается лексическое окружение один раз. 
Потому то и будет последнее значение, что тогда было записано в цикле.

В итоге имеем, то что цикл создает иную область видимости, отличающее от локальной области переменных let, const.

*/
for (var i = 0; i < 10; i++) {
    setTimeout(function() {
        console.log(i);
    }, 0);
}
/* Как вариант я написал функциональное выражение, которое не записывается в переменную
 а также вызвал функцию благодаря методу, через которое получаем в консоли значение num */
for (var i = 1; i <= 10; i++) {

    ( () => {
        let num = i;
            setTimeout( () => {
                console.log(num);
        }, 0);

    })()

};